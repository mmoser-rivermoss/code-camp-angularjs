/*! code-camp 04-04-2014 */
angular.module("riverMoss", [ "ngCookies", "ngResource", "ui.bootstrap", "ui.router", "riverMoss.confirmations", "riverMoss.system", "riverMoss.directives", "riverMoss.modules", "riverMoss.scope", "riverMoss.slides", "hljs", "riverMoss.greeting", "riverMoss.services-topic", "riverMoss.notifications", "riverMoss.promises" ]), 
angular.module("riverMoss.system", []), angular.module("riverMoss").config([ "$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/"), $stateProvider.state("greeting", {
        url: "/greeting",
        templateUrl: "views/index.html"
    }).state("scope", {
        url: "/scope",
        templateUrl: "views/scope.html"
    }).state("services", {
        url: "/services",
        templateUrl: "views/services.html"
    }).state("modules", {
        url: "/modules",
        templateUrl: "views/modules.html"
    }).state("directives", {
        url: "/directives",
        templateUrl: "views/directives.html"
    }).state("promises", {
        url: "/promises",
        templateUrl: "views/promises.html"
    }).state("home", {
        url: "/",
        templateUrl: "views/index.html"
    });
} ]), angular.module("riverMoss").config([ "$locationProvider", function($locationProvider) {
    $locationProvider.hashPrefix("!");
} ]).run([ "$state", "$rootScope", function($state, $rootScope) {
    $rootScope.$state = $state;
} ]), angular.module("riverMoss.system").factory("Global", [ function() {
    var _this = this;
    return _this._data = {
        user: window.user,
        authenticated: !!window.user,
        administrator: !0
    }, _this._data;
} ]), angular.module("riverMoss.confirmations", []), angular.module("riverMoss.confirmations").controller("ConfirmationController", [ "$scope", "$modalInstance", "data", function($scope, $modalInstance, data) {
    $scope.data = data, $scope.ok = function() {
        $modalInstance.close();
    }, $scope.cancel = function() {
        $modalInstance.dismiss();
    };
} ]), angular.module("riverMoss.confirmations").directive("ngConfirm", [ "$modal", function($modal) {
    return {
        restrict: "A",
        link: {
            pre: function($scope, element, attrs) {
                element.bind("click", function(event) {
                    var message = attrs.ngConfirm, ngClick = attrs.ngClick;
                    if (event.preventDefault(), ngClick && event.stopImmediatePropagation(), message) {
                        var title = attrs.ngConfirmTitle;
                        $modal.open({
                            templateUrl: "/templates/confirmation.tpl.html",
                            backdrop: "static",
                            keyboard: !1,
                            resolve: {
                                data: function() {
                                    return {
                                        title: title ? title : "Confirm",
                                        message: message
                                    };
                                }
                            },
                            controller: "ConfirmationController"
                        }).result.then(function() {
                            ngClick && $scope.$eval(ngClick);
                        }, function() {
                            event.stopImmediatePropagation(), event.preventDefault();
                        });
                    }
                });
            }
        }
    };
} ]), angular.module("riverMoss.confirmations").factory("Confirm", [ "$modal", function($modal) {
    function confirmation(message, title) {
        var modal = $modal.open({
            templateUrl: "/templates/confirmation.tpl.html",
            backdrop: "static",
            keyboard: !1,
            resolve: {
                data: function() {
                    return {
                        title: title ? title : "Confirm",
                        message: message
                    };
                }
            },
            controller: "ConfirmationController"
        });
        return modal.result;
    }
    return {
        confirmation: confirmation
    };
} ]), angular.module("riverMoss.slides", []), angular.module("riverMoss.slides").directive("slideShow", [ function() {
    return {
        restrict: "E",
        replace: !0,
        templateUrl: "/slides/templates/slide-show.tpl.html",
        controller: [ "$scope", "$location", function($scope, $location) {
            $scope.selectedIndex = 0, $scope.pages && $scope.pages.length > 0 && ($scope.selectedTemplate = $scope.pages[0].template, 
            $scope.showNextButton = $scope.pages.length > 1), $scope.next = function() {
                $scope.selectedIndex !== $scope.pages.length - 1 && ($scope.selectedIndex++, $scope.showNextButton = $scope.selectedIndex < $scope.pages.length - 1, 
                $scope.showNextSection = !$scope.showNextButton && $scope.nextSection, $scope.showPreviousButton = !0);
            }, $scope.previous = function() {
                0 !== $scope.selectedIndex && ($scope.selectedIndex--, $scope.showPreviousButton = 0 !== $scope.selectedIndex, 
                $scope.showNextButton = $scope.pages.length > 1, $scope.showNextSection = 1 === $scope.pages.length && $scope.nextSection);
            }, $scope.goToNextSection = function() {
                $location.path($scope.nextSection.path), $scope.showNextSection = !1;
            };
        } ],
        scope: {
            pages: "=",
            nextSection: "="
        },
        compile: function() {}
    };
} ]), angular.module("riverMoss.modules", []), angular.module("riverMoss.modules").controller("moduleController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/modules/templates/what-is-a-module.tpl.html"
    }, {
        template: "/modules/templates/getter-setter.tpl.html"
    }, {
        template: "/modules/templates/config-vs-run.tpl.html"
    }, {
        template: "/modules/templates/presentation-module.tpl.html"
    } ], $scope.nextSection = {
        name: "Services",
        path: "services"
    };
} ]), angular.module("riverMoss.scope", []), angular.module("riverMoss.scope").controller("ScopeController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/scope/templates/scope.tpl.html"
    }, {
        template: "/scope/templates/hierarchy.tpl.html"
    }, {
        template: "/scope/templates/improper-ng-model.tpl.html"
    }, {
        template: "/scope/templates/proper-ng-model.tpl.html"
    }, {
        template: "/scope/templates/eventing.tpl.html"
    } ], $scope.nextSection = {
        name: "Modules",
        path: "modules"
    };
} ]), angular.module("riverMoss.scope").controller("hierarchyController", [ "$scope", function($scope) {
    $scope.tree = {
        name: "$rootScope",
        children: [ {
            name: "$rootScope",
            children: [ {} ]
        }, {
            name: "scope001",
            children: [ {
                name: "scope002",
                children: [ {} ]
            }, {
                name: "scope003",
                children: [ {} ]
            } ]
        }, {
            name: "scope004",
            children: [ {
                name: "scope005",
                children: [ {} ]
            } ]
        }, {
            name: "scope006",
            children: []
        } ]
    };
} ]), angular.module("riverMoss.scope").controller("RuleOfThumbController", [ "$scope", function() {} ]), 
angular.module("riverMoss.scope").controller("HelloGalaxyController", [ "$scope", function($scope) {
    $scope.greeting = {
        name: "Galaxy"
    };
} ]), angular.module("riverMoss.scope").controller("EventingController", [ "$scope", function($scope) {
    $scope.broadcast = function() {
        $scope.$broadcast("event-broadcasted", $scope.event.data), $scope.event.data = "";
    }, $scope.emit = function() {
        $scope.$emit("event-emitted", $scope.event.data), $scope.event.data = "";
    };
} ]), angular.module("riverMoss.scope").controller("BroadcastListenerController", [ "$scope", function($scope) {
    $scope.$on("event-broadcasted", function(event, data) {
        $scope.broadcastedData = data;
    });
} ]), angular.module("riverMoss.scope").controller("EmitListenerController", [ "$scope", function($scope) {
    $scope.$on("event-emitted", function(event, data) {
        $scope.emittedData = data;
    });
} ]), angular.module("riverMoss.services-topic", []), angular.module("riverMoss.services-topic").controller("ServicesController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/servicesTopic/templates/what-is-a-service.tpl.html"
    }, {
        template: "/servicesTopic/templates/values.tpl.html"
    }, {
        template: "/servicesTopic/templates/service.tpl.html"
    }, {
        template: "/servicesTopic/templates/factory.tpl.html"
    }, {
        template: "/servicesTopic/templates/provider.tpl.html"
    }, {
        template: "/servicesTopic/templates/compare.tpl.html"
    }, {
        template: "/servicesTopic/templates/notifications.tpl.html"
    } ], $scope.nextSection = {
        name: "Directives",
        path: "directives"
    };
} ]), angular.module("riverMoss.services-topic").controller("ValuesController", [ "$scope", "Characters", function($scope, characters) {
    $scope.characters = characters, $scope.selectedCharacter = $scope.characters[0];
} ]), angular.module("riverMoss.services-topic").controller("ServiceController", [ "$scope", "CharacterService", function($scope, characterService) {
    $scope.characterService = characterService, $scope.selectedCharacter = $scope.characterService.characters[0];
} ]), angular.module("riverMoss.services-topic").controller("FactoryController", [ "$scope", "CharacterFactory", function($scope, characterService) {
    $scope.characterService = characterService, $scope.selectedCharacter = $scope.characterService.characters[0];
} ]), angular.module("riverMoss.services-topic").controller("ProviderController", [ "$scope", "CharacterService2", function($scope, characterService) {
    $scope.characterService = characterService, $scope.selectedCharacter = $scope.characterService.characters[0];
} ]), angular.module("riverMoss.services-topic").controller("NotificationsExampleController", [ "$scope", "Notifications", function($scope, notifications) {
    var error = !1;
    $scope.add = function($event) {
        $event.preventDefault(), notifications.show($scope.message, error), error = !error;
    };
} ]), angular.module("riverMoss.services-topic").value("Characters", [ {
    name: "bart",
    image: "../../img/bart.jpg"
}, {
    name: "luke",
    image: "../../img/luke.jpg"
}, {
    name: "sheldon",
    image: "../../img/sheldon.jpg"
} ]), angular.module("riverMoss.services-topic").service("CharacterService", [ "Characters", function(characters) {
    this.characters = characters;
} ]), angular.module("riverMoss.services-topic").factory("CharacterFactory", [ "Characters", function(characters) {
    var service = {
        characters: characters
    };
    return service;
} ]), angular.module("riverMoss.services-topic").provider("CharacterService2", function() {
    var otherCharacters = [];
    return {
        addCharacter: function(character) {
            otherCharacters.push(character);
        },
        $get: [ "Characters", function(characters) {
            var service = {
                characters: angular.copy(characters)
            };
            return angular.forEach(otherCharacters, function(character) {
                service.characters.push(character);
            }), service;
        } ]
    };
}), angular.module("riverMoss.services-topic").config([ "CharacterService2Provider", function(characterService) {
    characterService.addCharacter({
        name: "elroy",
        image: "../../img/elroy.jpg"
    }), characterService.addCharacter({
        name: "scooby",
        image: "../../img/scooby.jpg"
    });
} ]), angular.module("riverMoss.directives", []), angular.module("riverMoss.directives").controller("DirectivesController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/directivesTopic/templates/button-scenario.tpl.html"
    }, {
        template: "/directivesTopic/templates/button.tpl.html"
    }, {
        template: "/directivesTopic/templates/button-directive.tpl.html"
    }, {
        template: "/directivesTopic/templates/slide-show-directive.tpl.html"
    } ], $scope.nextSection = {
        name: "Promises",
        path: "promises"
    };
} ]), angular.module("riverMoss.directives").directive("button", [ function() {
    return {
        restrict: "E",
        compile: function(element, attr) {
            element.addClass("btn"), attr.buttonType ? element.addClass("btn-" + attr.buttonType) : "submit" === attr.type && element.addClass("btn-primary"), 
            attr.size && element.addClass("btn-" + attr.size);
        }
    };
} ]), angular.module("riverMoss.directives").controller("ButtonController", [ "$scope", function() {} ]), 
angular.module("riverMoss.greeting", []), angular.module("riverMoss.greeting").controller("greetingController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/greeting/templates/greeting.tpl.html"
    }, {
        template: "/greeting/templates/what-is-angularjs.tpl.html"
    }, {
        template: "/greeting/templates/what-comes-with-angularjs.tpl.html"
    }, {
        template: "/greeting/templates/hello-world.tpl.html"
    }, {
        template: "/greeting/templates/ng-show.tpl.html"
    }, {
        template: "/greeting/templates/ng-switch.tpl.html"
    }, {
        template: "/greeting/templates/ng-repeat.tpl.html"
    } ], $scope.nextSection = {
        name: "Scope",
        path: "scope"
    };
} ]), angular.module("riverMoss.greeting").controller("HelloWorldController", [ "$scope", function($scope) {
    $scope.greeting = "World";
} ]), angular.module("riverMoss.greeting").controller("NgRepeatController", [ "$scope", function($scope) {
    $scope.items = [], $scope.add = function() {
        var item = {
            name: $scope.name
        };
        $scope.items.push(item), $scope.name = "";
    };
} ]), angular.module("riverMoss.greeting").controller("NgShowController", [ "$scope", function($scope) {
    $scope.hideOne = !1, $scope.hideTwo = !1, $scope.hideThree = !1, $scope.toggleOne = function() {
        $scope.hideOne = !$scope.hideOne;
    };
} ]), angular.module("riverMoss.greeting").controller("NgSwitchController", [ "$scope", function($scope) {
    $scope.characters = [ "bart", "luke", "sheldon" ];
} ]), angular.module("riverMoss.notifications", []), angular.module("riverMoss.notifications").controller("NotificationController", [ "$scope", "Notifications", function($scope, notificationsService) {
    $scope.notificationsService = notificationsService;
} ]), angular.module("riverMoss.notifications").provider("Notifications", [ function() {
    var stack = [], size = 10;
    return {
        setStackSize: function(value) {
            size = value;
        },
        $get: function() {
            function checkStack() {
                if (stack.length > size) {
                    var index = stack.length - size;
                    stack = stack.slice(index);
                }
            }
            function removeFromStack(message) {
                var messageIndex = 0;
                angular.forEach(stack, function(notification, index) {
                    notification === message && (messageIndex = index);
                }), stack.splice(messageIndex, messageIndex + 1);
            }
            function showMessage(message, success) {
                var alert = {
                    message: message,
                    type: success ? "success" : "danger"
                };
                service.messages.length > 0 && (stack.push(service.messages.pop()), checkStack()), 
                service.messages.push(alert);
            }
            function close() {
                stack.push(service.messages.pop()), checkStack();
            }
            function getStack() {
                return stack;
            }
            var service = {
                show: showMessage,
                messages: [],
                getStack: getStack,
                close: close,
                removeFromStack: removeFromStack
            };
            return service;
        }
    };
} ]), angular.module("riverMoss.notifications").config([ "NotificationsProvider", function(notifications) {
    notifications.setStackSize(3);
} ]), angular.module("riverMoss.promises", []), angular.module("riverMoss.promises").controller("PromisesController", [ "$scope", function($scope) {
    $scope.pages = [ {
        template: "/promises/templates/what-is-a-promise.tpl.html"
    }, {
        template: "/promises/templates/lazy-load.tpl.html"
    } ];
} ]), angular.module("riverMoss.promises").controller("LazyLoadController", [ "$scope", "Books", function($scope, booksService) {
    $scope.initialize = function() {
        booksService.query().then(function(books) {
            $scope.books = books;
        });
    };
} ]), angular.module("riverMoss.promises").factory("Books", [ "$http", "$q", function($http, $q) {
    function get() {
        if (null !== books) return $q.when(books);
        var deferred = $q.defer();
        return $http.get("/books").then(function(response) {
            books = response.data, deferred.resolve(books);
        }, function() {
            deferred.reject();
        }), deferred.promise;
    }
    var books = null, service = {
        query: get
    };
    return service;
} ]), angular.module("riverMoss.system").controller("HeaderController", [ "$scope", "Global", function($scope, Global) {
    $scope.global = Global, $scope.menu = [ {
        title: "Greeting",
        link: "greeting"
    }, {
        title: "Scope",
        link: "scope"
    }, {
        title: "Modules",
        link: "modules"
    }, {
        title: "Services",
        link: "services"
    }, {
        title: "Directives",
        link: "directives"
    }, {
        title: "Promises",
        link: "promises"
    } ], $scope.isCollapsed = !1;
} ]), window.bootstrap = function() {
    angular.bootstrap(document, [ "riverMoss" ]);
}, window.init = function() {
    window.bootstrap();
}, angular.element(document).ready(function() {
    "#_=_" == window.location.hash && (window.location.hash = ""), window.init();
});